<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>tech</title>
      <link href="/2024/08/19/tech/"/>
      <url>/2024/08/19/tech/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>币圈入门第二天 - 交易赚钱的原理</title>
      <link href="/2024/08/13/%E5%B8%81%E5%9C%88%E5%85%A5%E9%97%A8%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
      <url>/2024/08/13/%E5%B8%81%E5%9C%88%E5%85%A5%E9%97%A8%E7%AC%AC%E4%BA%8C%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="交易赚钱的原理"><a href="#交易赚钱的原理" class="headerlink" title="交易赚钱的原理"></a>交易赚钱的原理</h1><p>首先，先明确一点，你交易赚到的钱都是别人兜里的钱，这完全是一个从别人兜里拿钱的游戏。自然，你兜里的钱也会完全可以被别人拿走。</p><p>交易是如何赚钱的呢？ 首先让我们看看价格是如何上涨和下跌的，可能你会说：不就是买的单子比卖的单子多就会上涨吗？</p><p>交易是如何赚钱的？</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
        <tags>
            
            <tag> 加密货币 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>币圈入门第一天</title>
      <link href="/2024/08/13/%E5%B8%81%E5%9C%88%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2024/08/13/%E5%B8%81%E5%9C%88%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="中心主旨"><a href="#中心主旨" class="headerlink" title="中心主旨"></a>中心主旨</h1><p>与其临渊羡鱼，不如退而结网。好多人进入币圈几个月都有点蒙圈，币圈坑很多，骗子多。相信看到这篇文的你，应该是属于币圈小白，对这个圈子没有多少了解，不知道从何开始，希望这篇文章能填补你们的只是盲区。<br>我也相信你有许多问题，例如:如何选择一家靠谱的交易所?交易为什么赚钱，背后原理是什么?交易所的各个下单指令都有哪些意思?该在什么情况下运用?我用什么方法才能赚钱?为什么有人可以几千块就赚到上百万?接下来我为你我会分成几篇文章一一为你解答，在你成为币圈传奇交易员之前，让我们先把这些基础知识搞定!好的，那么请你先把无关的学习类型的网页关掉，提上裤子，让我们开始吧!</p><h1 id="交易所"><a href="#交易所" class="headerlink" title="交易所"></a>交易所</h1><p>你必须得到交易所里面才能进行交易，而B圈交易所多如牛毛，该如何选择一家靠谱的交易所?你一定要清楚，交易所分为两种:CEX和 DEX</p><h2 id="CEX-中心化交易所"><a href="#CEX-中心化交易所" class="headerlink" title="CEX(中心化交易所)"></a>CEX(中心化交易所)</h2><p>CEX，又称中心化交易所，大多数交易者都选择在这里进行交易。为什么呢?CEX 交易所提供了 DEX 交易所所不具备的高流动性，以及低交易滑点，比 DEX 交易所更低的手续费，以及更快的成交速度。等等!你是不是在想什么是流动性?什么是滑点?还有交易所手续费如何收的?让我为你举一个例子!你一定就明白了!</p><h2 id="滑点"><a href="#滑点" class="headerlink" title="滑点"></a>滑点</h2><p>假如你来到了菜市场想看看苹果价格，想买20个苹果回去给小孩。这个时候你绕菜市场一圈发现几个商贩出价如下：<br>商家D 一共有12个苹果， 出家10.8元&#x2F;个<br>商家C 一共有6个苹果， 出家10.6元&#x2F;个<br>商家B 一共有5个苹果， 出家10.5元&#x2F;个<br>商家A 一共有2个苹果， 出家10元&#x2F;个<br>此时买家出价情况如下：<br>买家A 一想买3个苹果， 出价10元&#x2F;个<br>买家B 一想买4个苹果， 出价9.9元&#x2F;个<br>买家C 一想买5个苹果， 出价9.5元&#x2F;个<br>这个时候交易所中间的给出价格就是10元<br>这就是一个简单的交易所订单薄(Order Book)<br>真实交易所的交易订单簿：<br><img src="https://img.51santi.uk/file/d8d36b9881ff6dd38d0a4.jpg" alt="d8d36b9881ff6dd38d0a4.jpg"><br>这时候，你横空出世，并且打手一挥，我要买20个！ 只要数凑够20个数就行！不在乎价格，但是要以最优价格卖给我！（这里涉及到一个叫市价单的概念，后面文章会说）。<br>然后商贩听到你这句话瞬间高潮，纷纷跑过来卖给你，因为你的这次大手笔行为，因为一己之力把价格推到10.8，而不是开始的10块，但是你是在价格菜市场报价10块钱的时候买的，不过你想想，你手里的20个苹果，平均下来，每个价格是10元吗？当然不是！你可以去看看哪个订单簿：<br>商家D 一共有12个苹果，出价10.8元&#x2F;个<br>商家C 一共有6个苹果，出价10.6元&#x2F;个<br>商家B 一共有5个苹果，出价10.5元&#x2F;个<br>商家D 一共有2个苹果，出价10元&#x2F;个 也就是说你每个均价为(2<em>10 + 5</em>10.5 + 6<em>10.6 +7</em>10.8)&#x2F;20 &#x3D; 10.585也就是说你在价格是10元的时候买20个，但是你最后花了均价10.585才买了20个，这个价格之间的差距就叫做滑点。</p><p>所以，滑点低的意思就是：你购买的物品的平均价格与当时交易所的报价差距，当然滑点既可以往高了滑，也可往低了滑。这个和你当时下单的市场环境有关。所以，这里又引出了一个概念，叫深度。</p><h2 id="深度"><a href="#深度" class="headerlink" title="深度"></a>深度</h2><p>交易所深度指的是在一个交易所中，某个交易对(BTC&#x2F;USDT)买单和卖单的数量和价格信息。深度通常以一个深度表的形式呈现，其中包含了一系列价格水平和这些价格水平上的买入和卖出数量.<br>深度表通常由两部分组成：买单深度和卖单深度。买单深度指的是所有买单的数量和价格信息，按照价格从高到低排列；卖单深度指的是所有卖单的数量和价格信息，按照价格从低到高排列。<br>当你在一个交易所上查看某个交易对的深度表时，你会看到两个部分：买单深度和买单深度。以下是一个简单的离职，以btc&#x2F;usdt交易对为例：<br>卖单深度表<br>价格   数量<br>$60900 1BTC<br>$60600 2BTC<br>$60300 4BTC<br>$60100 1BTC</p><p>买单深度表<br>价格   数量<br>$60000 2.5BTC<br>$59000 2BTC<br>$58000 4BTC<br>$58000 1BTC<br>上面的例子中，买单深度表表示当前有人愿意以不同价格购买比特币，而卖单深度表表示当前有人愿意以不同价格出售比特币。例如，如果你想出售比特币，你可以选择在卖单深度表上选择最低的价格$60100购买1BTC，因为这是当前最低的购买价格。<br><strong><font color="red">当买卖双方的订单数量都很大且价格差异较小时，这种情况称为深度够好。</font></strong><br>深度够好的交易对通常意味着市场流动性高，交易量大，价格波动小，订单执行速度较快。这对于交易者来说非常重要，因为他们可以在深度够好的交易对中更容易买入或卖出大量的资产，而不必担心价格波动或订单无法执行的风险。<br>一般来说，深度够好的交易对通常有较高的交易量和较小的价格差（即买卖之间的差异较小），同时也有足够的市场参与者（即买房和卖方数量都很大）。</p><h2 id="流动性"><a href="#流动性" class="headerlink" title="流动性"></a>流动性</h2><p>什么叫做流动性？想象以下，你在一个拍卖会上，手里有一幅珍贵的画作，你可能需要一段时间才能找到合适的买家卖出去，这就是低流动性。 但是，如果你手里握着一堆钞票，你可以买任何你想要的东西，这就是高流动性。</p><h2 id="DEX交易所-去中心化交易所"><a href="#DEX交易所-去中心化交易所" class="headerlink" title="DEX交易所(去中心化交易所)"></a>DEX交易所(去中心化交易所)</h2><p>为什么已经有CEX（中心化交易所），还会有DEX这种手续费高，流动性低，滑点高的交易所，这种交易所又存在的必要吗？当然有！<br>去中心化交易所的主要优点是提供了更高的隐私保护和安全性。因为所有的交易都在区块链上公开透明地进行，所以很难进行欺诈或者操纵市场。此外，因为用户不需要将资金存储在交易所上，所以他们不需要担心交易所被黑客攻击或者倒闭的风险。 因为所有中心化交易所都是私人公司，理论上他们有可能圈钱跑路，在币圈极为常见。比如（中币，ftx）。<br>真正靠谱的交易所：OKX和币安<br>DEX交易所：Kine&#x2F;uniswap<br>如果不在coinmarketcap排行前十，最好不要使用。附上链接：<a href="https://coinmarketcap.com/zh/rankings/exchanges/">按交易量排名的交易所</a><br>PS：不要相信某小号上的交易所排名，某小号给钱就能上排名，之前出现过有人相信某小号的野鸡交易所，以为靠谱，结果交易所卷钱跑路。</p><h2 id="手续费"><a href="#手续费" class="headerlink" title="手续费"></a>手续费</h2><p>交易手续费在交易当中是一个非常重要的因素，因为交易所手续费在你每次开仓平仓都要收一次！加仓减仓也会收！也就是说，一笔完整的交易，最少会被收两次手续费！单次交易手续费一般为0.05%，也就是说最少两次平仓会扣你持仓价值的0.1%手续费，相当于你从微信提款到银行卡被扣掉的手续费钱。并且最少扣这么多，如果你中途加仓减仓会扣的更多！所以长久来看，手续费哪怕少10%也会帮你节省一大笔开销。<br>使用下面的链接注册交易所，并填写请码，你可以获得全网最高的20%的手续费减免!!<br>使用下面的链接注册交易所，并填写邀请码，你可以获得全网最高的20% 的手续费减免!!<br>在这里我个人用的是币安的交易所，币安的作为币圈第一交易所，手续费收的也最少，0.04%，其他交易所一般为0.05%，并且用下面的邀请码还能减免 20%，其他交易所我也会使用，因为不同交易所会推出不同的活动，也会有不同的机会，最重要的是不要把鸡蛋放在一个篮子里!<br>链接打开注册就好，发现邀请码空着的话手动填写一下即可。</p><h2 id="手续费减免链接"><a href="#手续费减免链接" class="headerlink" title="手续费减免链接"></a>手续费减免链接</h2><p>OKX（欧意减免20%手续费注册链接）：<br>邀请码：15162902<br>注册链接：<a href="https://okx.com/join/15162902">https://okx.com/join/15162902</a></p><p>Binance(币安减免20%手续费注册链接)<br>邀请码：CPA_004JXRWEL3<br>注册链接：<a href="https://www.binance.com/zh-CN/join?ref=CPA_004JXRWEL3">https://www.binance.com/zh-CN/join?ref=CPA_004JXRWEL3</a></p><h1 id="交易所选择总结"><a href="#交易所选择总结" class="headerlink" title="交易所选择总结"></a>交易所选择总结</h1><p>最后总结一下，交易所一般用 OKX或者币安上述几个就可以，一定要用上述具有优惠的邀请码注册，未来可以节省大笔手续费!野鸡交易所一定不要用!有的野鸡交易所为了吸引你，说给你90% 手续费优惠，但是鬼知道他们什么时候准备带着你的本金跑路!识别是否为野鸡交易所，到:CoinMarketCap 交易所排名上面看看，不是前十直接 pass 掉吧，千万别别钱没赚到，本金没了。你看上他那点手续费，他看上你的本金!</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
        <tags>
            
            <tag> 加密货币 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客美化/主题安装配置</title>
      <link href="/2024/08/12/Hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/08/12/Hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96-%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>这期教程演示将使用一款基于hexo-theme-butterfly修改的主題-安知鱼，安知鱼是一个简洁、美丽的静态hexo主题</p><p>项目地址：<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">https://github.com/anzhiyu-c/hexo-theme-anzhiyu</a><br>官方文档：<a href="https://docs.anheyu.com/initall.html">https://docs.anheyu.com/initall.html</a></p><h1 id="1-安装主题"><a href="#1-安装主题" class="headerlink" title="1.安装主题"></a>1.安装主题</h1><h2 id="1-1-Git-安裝"><a href="#1-1-Git-安裝" class="headerlink" title="1.1. Git  安裝"></a>1.1. Git  安裝</h2><p>在博客根目录里 安装最新版主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>第一次使用需要安装 pug 以及 stylus 的渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="1-2-应用主题"><a href="#1-2-应用主题" class="headerlink" title="1.2. 应用主题"></a>1.2. 应用主题</h2><p>修改 hexo 配置文件_config.yml，把主题改为anzhiyu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: anzhiyu</span><br></pre></td></tr></table></figure><h2 id="1-3-覆盖配置"><a href="#1-3-覆盖配置" class="headerlink" title="1.3. 覆盖配置"></a>1.3. 覆盖配置</h2><p>覆盖配置可以使主题配置放置在 anzhiyu 目录之外，避免在更新主题时丢失自定义的配置。</p><p>如果你是linux系统就执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -rf ./themes/anzhiyu/_config.yml ./_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><p>如果你是windows系统就请手动将&#x2F;themes&#x2F;anzhiyu&#x2F;_config.yml复制到根目录下并重命名为_config.anzhiyu.yml即可。</p><p>以后如果修改任何主题配置，都只需修改 _config.anzhiyu.yml 的配置即可。</p><p>注意：</p><ul><li>只要存在于 _config.anzhiyu.yml 的配置都是高优先级，修改原 _config.yml 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 _config.anzhiyu.yml 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 hexo g –debug 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的</li></ul><h2 id="1-4-配置主题与主站配置文件"><a href="#1-4-配置主题与主站配置文件" class="headerlink" title="1.4. 配置主题与主站配置文件"></a>1.4. 配置主题与主站配置文件</h2><p>到这一步主题部署就完成了，就是这么简单！！！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//本地预览</span><br><span class="line">hexo cl; hexo s</span><br><span class="line"></span><br><span class="line">//推送更新上线</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h2 id="1-5-生成标签页和分类页"><a href="#1-5-生成标签页和分类页" class="headerlink" title="1.5. 生成标签页和分类页"></a>1.5. 生成标签页和分类页</h2><p>执行以下命令生成标签页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>找到 source&#x2F;tags&#x2F;index.md 这个文件，修改添加 type: “tags”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2024-07-05 03:36:02</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">top_img: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>执行以下命令生成分类页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>找到 source&#x2F;categories&#x2F;index.md 这个文件，修改添加 type: “categories”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2024-07-05 03:36:48</span><br><span class="line">aside: false</span><br><span class="line">top_img: false</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>剩下的工作就是配置_config.yml和_config.anzhiyu.yml文件，修改博客参数。</p><h1 id="2-配置文章模版"><a href="#2-配置文章模版" class="headerlink" title="2. 配置文章模版"></a>2. 配置文章模版</h1><p>&#x2F;scaffolds目录下有几个模版文件，其中</p><ul><li>post.md：新建博文模版</li><li>page.md：新建标签页模版<br>post.md模版，仅供参考<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125; <span class="comment">#【必需】页面标题</span></span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125; <span class="comment">#【必需】页面创建日期</span></span><br><span class="line"><span class="attr">updated:</span> <span class="comment">#【可选】页面更新日期</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment">#【可选】文章标签</span></span><br><span class="line"><span class="attr">categories:</span> <span class="comment">#【可选】文章分类</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment">#【可选】文章关键字</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment">#【可选】文章描述</span></span><br><span class="line"><span class="attr">top:</span> <span class="comment"># 1 置顶</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="comment">#【可选】文章顶部图片</span></span><br><span class="line"><span class="attr">comments:</span> <span class="comment">#【可选】显示文章评论模块(默认 true)</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span> <span class="comment">#【可选】文章缩略图(如果没有设置 top_img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</span></span><br><span class="line"><span class="attr">toc:</span> <span class="comment">#【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="comment">#【可选】显示 toc_number(默认为设置中 toc 的 number 配置)</span></span><br><span class="line"><span class="attr">toc_style_simple:</span> <span class="comment">#【可选】显示 toc 简洁模式</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="comment">#【可选】显示文章版权模块(默认为设置中 post_copyright 的 enable 配置)</span></span><br><span class="line"><span class="attr">copyright_author:</span> <span class="comment">#【可选】文章版权模块的文章作者</span></span><br><span class="line"><span class="attr">copyright_author_href:</span> <span class="comment">#【可选】文章版权模块的文章作者链接</span></span><br><span class="line"><span class="attr">copyright_url:</span> <span class="comment">#【可选】文章版权模块的文章作者链接</span></span><br><span class="line"><span class="attr">copyright_info:</span> <span class="comment">#【可选】文章版权模块的版权声明文字</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="comment">#【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">katex:</span> <span class="comment">#【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="comment">#【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment">#【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</span></span><br><span class="line"><span class="attr">aside:</span> <span class="comment">#【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="attr">swiper_index:</span> <span class="number">10</span> <span class="comment">#【可选】首页轮播图配置 index 索引，数字越小越靠前</span></span><br><span class="line"><span class="attr">top_group_index:</span> <span class="number">10</span> <span class="comment">#【可选】首页右侧卡片组配置, 数字越小越靠前</span></span><br><span class="line"><span class="attr">ai:</span> <span class="comment">#【可选】文章ai摘要</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">&quot;#fff&quot;</span> <span class="comment">#【可选】文章主色，必须是16进制颜色且有6位，不可缩减，例如#ffffff 不可写成#fff</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;video-container&quot;&gt;</span></span><br><span class="line">[<span class="string">up主专用，视频内嵌代码贴在这</span>]</span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">.video-container</span> &#123;</span><br><span class="line">    <span class="attr">position:</span> <span class="string">relative;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span></span><br><span class="line">    <span class="attr">padding-top:</span> <span class="number">56.25</span><span class="string">%;</span> <span class="string">/*</span> <span class="number">16</span><span class="string">:9</span> <span class="string">aspect</span> <span class="string">ratio</span> <span class="string">(height/width</span> <span class="string">=</span> <span class="number">9</span><span class="string">/16</span> <span class="string">*</span> <span class="number">100</span><span class="string">%)</span> <span class="string">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">.video-container</span> <span class="string">iframe</span> &#123;</span><br><span class="line">    <span class="attr">position:</span> <span class="string">absolute;</span></span><br><span class="line">    <span class="attr">top:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    <span class="attr">left:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">100</span><span class="string">%;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>page.md模版，仅供参考<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125; <span class="comment">#【必需】页面标题</span></span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125; <span class="comment">#【必需】页面创建日期</span></span><br><span class="line"><span class="attr">type:</span> <span class="comment">#【必需】标签、分类、关于、音乐馆、友情链接、相册、相册详情、朋友圈、即刻页面需要配置</span></span><br><span class="line"><span class="attr">updated:</span> <span class="comment">#【可选】页面更新日期</span></span><br><span class="line"><span class="attr">comments:</span> <span class="comment">#【可选】显示页面评论模块(默认 true)</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment">#【可选】页面描述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment">#【可选】页面关键字</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span> <span class="comment">#【可选】页面顶部图片</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="comment">#【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">katex:</span> <span class="comment">#【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">aside:</span> <span class="comment">#【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="comment">#【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment">#【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</span></span><br><span class="line"><span class="attr">top_single_background:</span> <span class="comment">#【可选】部分页面的顶部模块背景图片</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br></pre></td></tr></table></figure></li></ul><h1 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h1><p>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-topindex --save</span><br></pre></td></tr></table></figure><p>设置置顶<br>给需要置顶的文章加入top参数，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">每天一个linux命令</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017-01-23 11:41:48</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">运维</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">linux命令</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>如果存在多个置顶文章，top后的参数越大，越靠前。</p><h1 id="开启本地搜索"><a href="#开启本地搜索" class="headerlink" title="开启本地搜索"></a>开启本地搜索</h1><p>安装插件<br>你需要安装 hexo-generator-search，根据它的文档去做相应配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>设置主题配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure><p>enable: 是否开启本地 搜索<br>preload: 预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件<br>CDN: 搜索文件的 CDN 地址（默认使用的本地链接）</p><h1 id="添加任意文件"><a href="#添加任意文件" class="headerlink" title="添加任意文件"></a>添加任意文件</h1><p>例如当我们想在网站根目录添加ads.txt文件，来通过站长验证时，我们只需要在&#x2F;source文件夹下放置该文件即可。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最强免费安装office，永久使用</title>
      <link href="/2024/08/06/%E6%9C%80%E5%BC%BA%E5%85%8D%E8%B4%B9%E5%AE%89%E8%A3%85office%EF%BC%8C%E6%B0%B8%E4%B9%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/08/06/%E6%9C%80%E5%BC%BA%E5%85%8D%E8%B4%B9%E5%AE%89%E8%A3%85office%EF%BC%8C%E6%B0%B8%E4%B9%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="office免费永久使用，地表最强安装"><a href="#office免费永久使用，地表最强安装" class="headerlink" title="office免费永久使用，地表最强安装"></a>office免费永久使用，地表最强安装</h1><h2 id="1-Google搜索-ms-microsoft-odt并下载"><a href="#1-Google搜索-ms-microsoft-odt并下载" class="headerlink" title="1. Google搜索 ms microsoft odt并下载"></a>1. Google搜索 ms microsoft odt并下载</h2><p> 下载链接：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=49117">https://www.microsoft.com/en-us/download/details.aspx?id=49117</a></p><h2 id="2-管理员方式运行officedeploymentTool-选择一个新建的office文件夹并确定"><a href="#2-管理员方式运行officedeploymentTool-选择一个新建的office文件夹并确定" class="headerlink" title="2. 管理员方式运行officedeploymentTool -&gt; 选择一个新建的office文件夹并确定"></a>2. 管理员方式运行officedeploymentTool -&gt; 选择一个新建的office文件夹并确定</h2><p> 有如下几个文件说明提取成功<br><img src="https://img.51santi.uk/file/342948c8adbc87370406b.png" alt="342948c8adbc87370406b.png"></p><h2 id="3-在文件所在空白处按住shift-鼠标右键，打开powershell窗口"><a href="#3-在文件所在空白处按住shift-鼠标右键，打开powershell窗口" class="headerlink" title="3. 在文件所在空白处按住shift+鼠标右键，打开powershell窗口"></a>3. 在文件所在空白处按住shift+鼠标右键，打开powershell窗口</h2><h2 id="4-运行如下命令进行安装"><a href="#4-运行如下命令进行安装" class="headerlink" title="4.运行如下命令进行安装"></a>4.运行如下命令进行安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\setup.exe /configure .\configuration-Office2021Enterprise.xml</span><br></pre></td></tr></table></figure><h2 id="5-等半小时左右安装"><a href="#5-等半小时左右安装" class="headerlink" title="5.等半小时左右安装"></a>5.等半小时左右安装</h2><p><img src="https://img.51santi.uk/file/eb245d202c44edecedf8e.png" alt="eb245d202c44edecedf8e.png"></p><h2 id="6-打开office-word核对是否已激活，如果没激活重启电脑即可。"><a href="#6-打开office-word核对是否已激活，如果没激活重启电脑即可。" class="headerlink" title="6.打开office word核对是否已激活，如果没激活重启电脑即可。"></a>6.打开office word核对是否已激活，如果没激活重启电脑即可。</h2><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无人值守高度自定义的纯净 Windows 11/10 系统</title>
      <link href="/2024/08/06/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E9%AB%98%E5%BA%A6%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E7%BA%AF%E5%87%80-Windows-11-10-%E7%B3%BB%E7%BB%9F/"/>
      <url>/2024/08/06/%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E9%AB%98%E5%BA%A6%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E7%BA%AF%E5%87%80-Windows-11-10-%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="安装windows-11-10-无人值守，无需交互的方式配置-创建账号"><a href="#安装windows-11-10-无人值守，无需交互的方式配置-创建账号" class="headerlink" title="安装windows 11&#x2F;10 无人值守，无需交互的方式配置&#x2F;创建账号"></a>安装windows 11&#x2F;10 无人值守，无需交互的方式配置&#x2F;创建账号</h1><h2 id="1-配置系统应答文件：【点击前往】"><a href="#1-配置系统应答文件：【点击前往】" class="headerlink" title="1.配置系统应答文件：【点击前往】"></a>1.配置系统应答文件：<a href="https://schneegans.de/windows/unattend-generator/">【点击前往】</a></h2><p>参考配置文件网盘链接：<a href="https://pan.baidu.com/s/17qXzYTxhmnAZPmlmFbj2fQ?pwd=js68">https://pan.baidu.com/s/17qXzYTxhmnAZPmlmFbj2fQ?pwd=js68</a><br>提取码：js68</p><h2 id="2-系统镜像编辑器：【点击下载】"><a href="#2-系统镜像编辑器：【点击下载】" class="headerlink" title="2.系统镜像编辑器：【点击下载】"></a>2.系统镜像编辑器：<a href="https://www.anyburn.com/">【点击下载】</a></h2><h3 id="2-1打开编辑器"><a href="#2-1打开编辑器" class="headerlink" title="2.1打开编辑器"></a>2.1打开编辑器</h3><h3 id="2-2编辑镜像文件"><a href="#2-2编辑镜像文件" class="headerlink" title="2.2编辑镜像文件"></a>2.2编辑镜像文件</h3><p> <img src="https://img.51santi.uk/file/c8b28489e90e634fcf0e6.jpg" alt="c8b28489e90e634fcf0e6.jpg"></p><h3 id="2-3添加交互配置文件（autounattend-xml）"><a href="#2-3添加交互配置文件（autounattend-xml）" class="headerlink" title="2.3添加交互配置文件（autounattend.xml）"></a>2.3添加交互配置文件（autounattend.xml）</h3><p> <img src="https://img.51santi.uk/file/cb479ea96fdf022290485.jpg" alt="cb479ea96fdf022290485.jpg"></p><h2 id="3-Windows-系统镜像官方下载：【Windows-11】、【Windows-10】"><a href="#3-Windows-系统镜像官方下载：【Windows-11】、【Windows-10】" class="headerlink" title="3.Windows 系统镜像官方下载：【Windows 11】、【Windows 10】"></a>3.Windows 系统镜像官方下载：<a href="https://www.microsoft.com/software-download/windows11">【Windows 11】</a>、<a href="https://www.microsoft.com/en-us/software-download/windows10">【Windows 10】</a></h2><h2 id="4-refus镜像刻录到U盘【点击前往】"><a href="#4-refus镜像刻录到U盘【点击前往】" class="headerlink" title="4.refus镜像刻录到U盘【点击前往】"></a>4.refus镜像刻录到U盘<a href="https://rufus.ie/en/">【点击前往】</a></h2><p>Rufus 是一个可以帮助格式化和创建可引导USB闪存盘的工具，比如 USB 随身碟，记忆棒等等。<br>在如下场景中会非常有用：</p><ul><li>你需要把一些可引导的ISO格式的镜像（Windows，Linux，UEFI等）创建成USB 安装盘的时候</li><li>你需要使用一个还没有安装操作系统的设备的时候</li><li>你需要从DOS系统刷写 BIOS或者其他固件的时候</li><li>你需要运行一个非常底层的工具的时候</li></ul><h2 id="5-安装完系统后激活系统（如下为激活Windows-10作为参考）"><a href="#5-安装完系统后激活系统（如下为激活Windows-10作为参考）" class="headerlink" title="5. 安装完系统后激活系统（如下为激活Windows 10作为参考）"></a>5. 安装完系统后激活系统（如下为激活Windows 10作为参考）</h2><p>以管理员方式运行powershell，逐个执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class="line">slmgr /skms kms.03k.org</span><br><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>区块链知识-Layer0/Layer1/Layer2到底是什么</title>
      <link href="/2024/07/30/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9F%A5%E8%AF%86-Layer0-Layer1-Layer2%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2024/07/30/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9F%A5%E8%AF%86-Layer0-Layer1-Layer2%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<p>举个简单的例子，一个公司业务量庞大，于是他开了一个子公司，把一些业务交由子公司处理。母公司就是Layer 1，子公司就是Layer 2。这样，母公司的负担就减轻了。首先，我们需要定义第 1 层是什么：第 1 层网络是基础层，或者说是区块链的底层基础设施。也称为主网络或“主网”，它不仅定义了生态系统的核心规则，还可以验证和完成交易，如以太坊、比特币和 Solana 等示例。第 1 层区块链通常从强调去中心化和安全性开始 — — 这两者都是任何健全网络的核心原则，并且（除了一些例外）由多元化的全球开发人员和参与者（如验证者）网络维护。由于缺乏任何中央权威或监督，这些平台要求技术本身具有与生俱来的安全性，以保护用户免受诈骗和攻击。由于设计中的这种优先级，更不用说维持功能齐全的生态系统所需的大量资源，它们通常缺乏可扩展性。虽然一些开发人员认为无法在安全性、去中心化和可扩展性之间实现平衡是该技术的一个不可阻挡的缺陷（被称为区块链三难困境），但第 2 层解决方案，例如以太坊上的rollups和比特币上的闪电网络是用于解决这些问题的一种解决方案。</p><h1 id="Layer-1"><a href="#Layer-1" class="headerlink" title="Layer 1"></a>Layer 1</h1><p>Layer 1包含大家最熟悉的比特币、以太坊之类的链。Layer 1定义可以说是区块链的底层架构和协议，他的另外一个名字是公链。<br><img src="https://telegra.ph/file/56fb32e9a0dcd59b3fbc8.jpg" alt="56fb32e9a0dcd59b3fbc8.jpg"></p><h2 id="Layer-1-链的特点"><a href="#Layer-1-链的特点" class="headerlink" title="Layer 1 链的特点"></a>Layer 1 链的特点</h2><ul><li>自己独立的链，不依赖于其他链，就可以独立运作</li><li>支持独立运作，有配套的架构和参与机制，比如他们有自己的共识机制，有自己的Ledger(账本)，有自己的节点网络（node），有自己的加密算法，也有自己的原始代币</li><li>他们通常都支持更上层的协议和应用从而打造他们自己的生态，但也有特殊情况，比如比特币的链，由于过于原始，在向上支持这一块做的比较少<br>所以当我们看到一条链，如果符合上述绝大部分特点，不用看细节，基本上可以明白，他是一条Layer公链。以大家熟悉的以太坊的链做参考，以太坊支持各种上层的应用。<br><img src="https://img.51santi.uk/file/447dc2f5081fd4c902c66.jpg" alt="447dc2f5081fd4c902c66.jpg"></li></ul><h1 id="Layer-2"><a href="#Layer-2" class="headerlink" title="Layer 2"></a>Layer 2</h1><p>Layer 2是指以Layer 1为基础，建立在Layer 1之上的协议，他们并不是刚才我们提到的建立在Layer 1之上的应用，Layer 2的开发，其实目的也是为了解决很多Layer 1的问题，比如扩容和提速等等。</p><p>其中比较通常的一个做法是，对于很多需要处理的复杂的交易，不是都在Layer 1的链上做处理和记录，而是拿下来在Layer 2的链处理，处理完之后，只是把处理结果的少量信息发回到Layer 1，目前主要的Layer 2还是围绕以太坊链来做的。</p><p>因为以太坊的生态是最大的，服务这个生态是最有利可图的，以太坊链有以下几个不同的扩容方案：</p><ul><li>Optimistic rollups 乐观汇总</li><li>Zero-knowledge rollups 零知识汇总</li><li>State channels 状态通道</li><li>Sidechains 侧链</li><li>Plasma 子链</li><li>Validiums 有效性证明<br>想更多的了解以上扩展方案，请登录以太坊官网查询<br><a href="https://ethereum.org/en/developers/docs/scaling/#validium">https://ethereum.org/en/developers/docs/scaling/#validium</a><br><img src="https://img.51santi.uk/file/147bb7ee924591ddc6951.jpg" alt="147bb7ee924591ddc6951.jpg"></li></ul><h2 id="Layer-2和Layer-1-的主要区别"><a href="#Layer-2和Layer-1-的主要区别" class="headerlink" title="Layer 2和Layer 1 的主要区别"></a>Layer 2和Layer 1 的主要区别</h2><ul><li>他对节点的要求是很随意</li><li>不像Layer 1通常采用比较分布式的共识机制</li><li>Layer 2的Node可能是一个或者一些server的cluster</li><li>参与的可能是一大群个体，也可能是一个公司或者商业组织，甚至是少数的个人节点，除了Node之外，根据方向的不同，也可能被成为Operator、sequencer之类的。</li><li>Layer 2的安全性还是主要依托于他对应的Layer 1的链</li><li>Layer 1和Layer 2是有最广泛共识的</li></ul><h1 id="Layer-0"><a href="#Layer-0" class="headerlink" title="Layer 0"></a>Layer 0</h1><p>不是那么流行的概念，通常Layer 0是指传输数据的基础架构和协议层，一般承担的任务是区块链和传统互联网的结合，Layer 0当时也要负责和Layer 1 甚至和Layer 2的兼容，Layer 0作为基础，也经常会有扩容之类的需求，</p><p>Polkadot是相对比较公认的一个提供了Layer 0的例子<br><img src="https://telegra.ph/file/0d33878db1f17398ef1c5.jpg" alt="0d33878db1f17398ef1c5.jpg"><br>Polkadot项目主要是提供了一个叫中继链（Relay Chain）底层架构。</p><p>这个中继链承担着保证在它之上的Layer 1的公链之间的沟通和安全的任务，换句话说，这个中继链是Layer 1的链互相高效沟通的信息桥梁，这也是为什么Polkadot经常被人称为是一个跨链的项目，这些在Polkadot中继链之上的，由开发者搭建起来的Layer 1的链，被称作Parachain，其中两个相对比较有名气的项目时Moonriver和Karura。</p><p>因为他们在中继链的眼中，是平行的，是同一级别的。这种跨链的沟通，是非常有用的，因为良好的共通性，可以解决之前我们提到的目前比较不便的低效的信息共享问题。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>Layer 0是最底层的架构，用于帮助Layer 1的链之间的跨链沟通，同时有些也承担和传统网络沟通的任务</li><li>Layer 1是我们最常见的链，也是比较底层的架构，通常知名的Layer 1的链都有自己的庞大生态，Layer 1主要用来支持基于它的协议，在他上面开发的区块链应用。</li><li>Layer 2的链通常是为了实现Layer 1的扩容而存在的。<br><img src="https://telegra.ph/file/acd6c7abe2225360b46ef.jpg" alt="acd6c7abe2225360b46ef.jpg"></li></ul><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TCP协议深度解读</title>
      <link href="/2024/07/19/TCP%E5%8D%8F%E8%AE%AE%E6%B7%B1%E5%BA%A6%E8%A7%A3%E8%AF%BB/"/>
      <url>/2024/07/19/TCP%E5%8D%8F%E8%AE%AE%E6%B7%B1%E5%BA%A6%E8%A7%A3%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="位、字节、字"><a href="#位、字节、字" class="headerlink" title="位、字节、字"></a>位、字节、字</h1><h2 id="1、位（bit）"><a href="#1、位（bit）" class="headerlink" title="1、位（bit）"></a>1、位（bit）</h2><p>来自英文bit，名叫比特，表示二进制位。<strong>位是计算机内部数据存储的最小单位</strong>，11011011是一个8位二进制。一个二进制位只能表示1或0两种状态；二个二进制位可以表示00、01、10、11四种状态；三位二进制数可以表示八种状态。。。。</p><h2 id="2、字节（byte）"><a href="#2、字节（byte）" class="headerlink" title="2、字节（byte）"></a>2、字节（byte）</h2><p>字节来自英文byte，叫‘拜特’， 习惯用大写的‘B’表示<br><strong>字节是计算机中数据处理的基本单位。</strong>计算机中以字节位单位存储和解释信息，规定一个字节由八个二进制位构成，即1个字节等于8个比特（1Byte&#x3D;8bit）。八位二进制数最小位00000000，最大位11111111；通常1个字节可以存入一个ASCII码，2个字节可存放一个汉字国标码。</p><h2 id="3、字"><a href="#3、字" class="headerlink" title="3、字"></a>3、字</h2><p><strong>计算机进行数据处理时，一次存取、加工和传输的数据长度称为字（word）。</strong>一个字通常由一个或多个（一般是字节的整数位）字节构成。例如286微机的字是由2个字节组成，他的字长位16；486微机的字由4个字节组成，他的字长位32位。 计算机的字长决定了cpu一次操作处理实际位数的多少，由此可见计算机的字长越大，其性能越好。</p><blockquote><p>在存取器中，通常每个单元存储一个字，因此每个字都是可以寻址的。字的长度用位来表示<br>在计算机的运算器、控制器中，通常是以字为单位进行传送的。例如，送往控制器去的字是指令，而送往运算器去的字就是一个数。在计算机中作为一个整体被存取、传送、处理的二进制数字符串叫做一个字或单元，每个字中二进制位数的长度，称为字长。一个字有若干个字节组成，不同的计算机系统的字长是不同的，常见的有8位、16位、32位、64位等，字长越长，计算机一次处理的信息位就越多，精度就越高，字长是计算机性能的一个重要指标。目前主流微机都是32位机。注意字与字长的区别，字是单位，而字长是指标，指标需要用单位去衡量。就像生活中重量与公斤的关系，公斤是单位，重量是指标，重要需要用公斤加以衡量。<br>8个位（bit）称为一个字节（byte），两个字节称为一个字（word），两个自称位一个双字（dword），两个双字称为一个四字（qword）</p></blockquote><h3 id="3-1字长"><a href="#3-1字长" class="headerlink" title="3.1字长"></a>3.1字长</h3><p>计算机的每个字所包含的位数称位字长。根据计算机的不同，字长有固定的和可变的两种。固定字长，即字长度不论什么情况都是固定不变的；可变字长，则在一定范围内，其长度是可变的。</p><p><strong>计算机的字长是指它一次可处理的二进制数字的数目。</strong>计算机处理数据的速率，自然和它一次能加工的位数以及进行运算的快慢有关。如果一台计算机的字长是另一台计算机的两倍，即使灵台计算机的速度相同，在相同的时间内，前者能做的工作是后者的两倍。</p><p>一般来讲，大型计算机的字长位32-64位，小型计算机位12-32位，而微型计算机为4-16位。字长是衡量计算机性能的一个重要因素。</p><h3 id="3-2字块"><a href="#3-2字块" class="headerlink" title="3.2字块"></a>3.2字块</h3><p>在信息处理中，一群字作为一个单元来处理的称为“字块”，也称“字组”。例如，储存于磁盘的一个磁道上的字群就称为一个字块，在磁带上通常每120个字符就间隔一个字块标志，也称为一个字块。块与块之间一般留1.27-2.54厘米的间隔。在大容量存储中，信息都是以字块为单位而存入的，因此只有字块才是可选址的。目前，在告诉缓存技术中引入了“字块”的概念。</p><h1 id="TCP报文（标准长度20字节）"><a href="#TCP报文（标准长度20字节）" class="headerlink" title="TCP报文（标准长度20字节）"></a>TCP报文（标准长度20字节）</h1><p>TCP(Transmission Contorl Protocol) 传输控制协议是一种面向连接的、可靠的、基于字节流的传输层协议<br>TCP报文格式如下：<br><img src="https://img.51santi.uk/file/6ef4a306cf7592744035f.jpg#pic_left" alt="6ef4a306cf7592744035f.jpg"><br>TCP数据包每次能够传输的最大长度&#x3D;MTU(1500B)-IP头(20B)-TCP头(20B)&#x3D;1460Bytes.<br><img src="https://img.51santi.uk/file/8c19c6f54117839a710ad.png#pic_left" alt="8c19c6f54117839a710ad.png"><br><strong>源端口号</strong>（2字节）：<br>  d5 df (54751)<br><strong>目的端口号</strong>（2字节）：<br>  22 b8  (8888)<br><img src="https://img.51santi.uk/file/72f86baf8867b1aca86a5.png" alt="72f86baf8867b1aca86a5.png"><br>TCP报文头中的源端口号和目的端口号同IP数据报中的源IP与目的IP唯一确定一条TCP连接。<br><strong>序列号</strong>（4字节）：<br>  37 59 56 75<br>  用来标识TCP发送端向TCP接收端发送的数据字节流<br>  <strong>确认序列号</strong>（4字节）<br>  由于该报文为SYN报文，ACK标志位0，故没有确认序号（ACK标志位1时确认序列号才有效）<br>  一旦建立连接，该值将始终发送（同ACK标志）<br>  <strong>头部长度</strong>（4位）：报文头长度（单位：位）&#x2F;32<br>  1000 (转化为10进制为8， 8<em>32&#x2F;8 &#x3D; 32，该报文包头长度为32个字节 )<br>  存在该字段是因为TCP报头任选字段长度可变，四位TCP报头长度为0101.<br>  报头不包含任何任选字段则长度为20字节；4为能表示的最大值为1111，转化为10进制为15， 15</em>32&#x2F;8 &#x3D; 60，故报头最大长度为60字节；<br>  <strong>标志位</strong>（12位）：<br>    0000 00010010<br>    Reserved：</p><pre><code>000~ ~~~~~~~~ECN（Explicit Congetsion Notification）：~~~0 ~~~~~~~~ = N / NS / Nonce Sum：有效排除潜在的ECN滥用，RFC 3540~~~~ 0~~~~~~~ = C / CWR（Congestion Window Reduced）：拥塞窗口减少标志~~~~ ~0~~~~~~ = E / ECE / ECN-Echo：ECE / ECN标志Control Bits：~~~~ ~~0~~~~~ = URG / Urgent：紧急指针有效性标志~~~~ ~~~1~~~~ = ACK / Acknowledgment：确认序号有效性标志，一旦一个连接建立起来，该标志总被置为1，即除了请求建立连接报文（仅设置Syn标志位为1），其它所有报文的该标志总为1~~~~ ~~~~0~~~ = PSH / Push：Push标志*（接收方应尽快将报文段提交至应用层）*~~~~ ~~~~~0~~ = RST / Reset：重置连接标志~~~~ ~~~~~~1~ = SYN / Syn：同步序号标志（发起一个新的连接）~~~~ ~~~~~~~0 = F / Fin：传输数据结束标志/释放一个连接</code></pre><p>  <strong>窗口大小</strong>（2字节）：窗口大小标志着TCP缓冲区内部剩余空间的大小，起到流量控制的作用。如果窗口满了，那么这个时候是不允许数据接口的，后面到达的数据会被丢失。<br>  20 00 （00100000 00000000） &#x3D; 8192<br>  由于2字节能够表示的最大正整数为65535，故窗口最大值为65535<br>  <strong>校验和</strong>（2字节）：校验和覆盖整个TCP报文端；强制字段，由发送端填充，CRC校验。由接收端进行验证数据的时候如果校验不通过。此处的校验和不仅仅校验TCP首部，还校验数据部分。<br>   2e 2f<br>   <strong>紧急指针</strong>（2字节）：当urgent标志为1时，紧急指针才有效，标识着哪部分的数据为紧急数据<br>    00 00<br>    <strong>任选字段</strong>（0-40字节）<br>&#x3D;&#x3D; <strong>【重要的字段】：</strong>&#x3D;&#x3D;</p><ul><li><em>源端口号与目的端口号：标识了发送方与接收方的地址</em>，IP地址和端口号合称位套接字。</li><li><strong>序列号和确认号：</strong> 32位序列号与32位确认号：序列号与确认号可以理解成两个通信进程在收发数据的时候互相应答的信息。比如说，A进程从序列号1000开始给B进程发数据，发送五个数据。那么在B收到数据回复的时候，这里A的确认序列号应该是从1006，如果是1003，那意味着1004、1005数据包没有收到，于是A启动重发机制。这也保证了数据的可靠性，也是TCP特点之一。序列号是进程发送消息的号码，而确认号是期望目的进程返回的号码。进行对比，从而验证数据包是否到达。</li></ul><h1 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h1><p>  在TCP&#x2F;IP协议中，TCP协议提供可靠的连接服务，采用三次握手建立一个连接。<br> <img src="https://img.51santi.uk/file/56fae17da4d16e1522f3b.png" alt="56fae17da4d16e1522f3b.png"></p><ul><li>第一次握手：client先产生一个初始序列号seq &#x3D;<br>ISN（C），作为syn并将该数据包发送给server，client进入SYN_SENT状态，等待server确认</li><li>第二次握手：server收到数据包后也发送自己的SYN报文作为响应，并初始化序列号seq &#x3D;<br>ISN（S），为了确认client的seq，server将client发送的seq加1，作为ACK发送给client，<br>Server进入SYN_RCVD状态。（SYN为synchronize的缩写， ACK为acknowledgment的缩写）</li><li>第三次握手：为了确认Server的SYN，Client将server发送的seq加1，作为ACK发送给server。client和server进入ESTABLISHED状态，完成三次握手，随后client与server之间可以开始传输数据了。</li></ul><p>通过这样的三次握手，客户端与服务端建立可靠的双工的连接，开始传送数据。三次握手的最主要目的是保证连接是双工的，可靠更多的是通过重传机制来保证的。</p><h2 id="半连接、半打开、半关闭状态"><a href="#半连接、半打开、半关闭状态" class="headerlink" title="半连接、半打开、半关闭状态"></a>半连接、半打开、半关闭状态</h2><ul><li><strong>半连接状态：</strong>发生的TCP三次握手过程中，客户端向服务器发起连接，服务器也进行了回应，但是客户端却不进行3次握手.</li><li><strong>半打开状态：</strong>在TCP连接中，如果某一段关闭了连接或者是异常关闭，则该连接处于半打开状态。解决半打开问题：引入心跳机制就可以察觉半打开状态。</li><li><strong>半关闭状态：</strong>当TCP连接中客户端向服务端发送FIN请求关闭，服务端回应ACK之后，并没有立即发送FIN给客户端，客户端就处于半关闭状态，此时客户端可以接收服务器发送的数据，但是客户端已经不能向服务器发送数据。</li></ul><h2 id="SYN-flood攻击"><a href="#SYN-flood攻击" class="headerlink" title="SYN flood攻击"></a>SYN flood攻击</h2><p>在三次握手过程中，服务器发送SYN-ACK之后，收到客户端的ACK之前的TCP连接称为半连接(half-open connect)。此时服务器处于SYN_RCVD状态。当收到ACK后，服务器转入ESTABLISHED态。<br><img src="https://img.51santi.uk/file/028795667155d0c093de4.jpg" alt="028795667155d0c093de4.jpg"></p><p>  SYN攻击就是攻击客户端在短时间内伪造大量不存在的IP地址，向服务器不断发送syn包，服务器回复确认包，并等待客户的确认，由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，目标系统运行缓慢，严重者引起网络堵塞甚至系统瘫痪。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//检测是否被Syn攻击</span><br><span class="line">netstat -n -p TCP | grep SYN_RCVD</span><br></pre></td></tr></table></figure><p>  一般较新的TCP&#x2F;IP协议栈都对这一过程进行修正来防范Syn攻击，修改tcp协议实现。主要方法由SynAttackProtect保护机制、SYN cookies技术、增加最大半连接和缩短超时时间等。但是不能完全防范Syn攻击。</p><h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><p><img src="https://img.51santi.uk/file/d6d1e37adf1f4b9482b21.jpg" alt="d6d1e37adf1f4b9482b21.jpg"></p><ul><li>第一次挥手：client发送一个FIN， seq&#x3D;k，<br>用来关闭client到server的数据传送，client进入FIN_WAIT_1状态；</li><li>第二次挥手：server收到FIN后，发送一个ACK（k+1）给client，确认序列号为收到序号+1（与SYN相同，一个FIN占用一个序号），server进入CLOSE_WAIT状态；</li><li>第三次挥手：server发送一个FIN， seq&#x3D;L，<br>用来关闭server到client的数据传送，server金融LAST_WAIT状态</li><li>第四次挥手：client收到FIN后，client进入TIME_WAIT状态，接着发送一个ACK(L+1)给server，<br>确认序号为收到序号+1，server进入CLOSED状态，完成四次挥手。</li></ul><h3 id="1、为什么建立连接是三次握手，而关闭连接却是四次挥手呢？"><a href="#1、为什么建立连接是三次握手，而关闭连接却是四次挥手呢？" class="headerlink" title="1、为什么建立连接是三次握手，而关闭连接却是四次挥手呢？"></a>1、为什么建立连接是三次握手，而关闭连接却是四次挥手呢？</h3><p>在三次握手是，服务器可以把ACK和SYN（ACK起应答作用，而SYN起同步作用）放在一个报文里来发送，但是四次挥手时，服务端发送的FIN与ACK是分开发送的。</p><p>如果已经建立了连接，但是客户端突然出现故障了怎么办？</p><p>TCP还设有一个保活计时器，显然，客户端如果出现故障，服务器不能一直等下去，白白浪费资源。服务器每收到一次客户端的请求后都会重新复位这个计时器，时间通常是设置为2小时，若两小时还没有收到客户端的任何数据，服务器就会发送一个探测报文段，以后每隔75秒钟发送一次。若一连发送10个探测报文仍然没反应，服务器就认为客户端出了故障，接着就关闭连接。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo博客</title>
      <link href="/2024/07/18/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/07/18/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>本文详细介绍了如何使用Hexo框架搭建一个个人博客，并将其部署到 GitHub Pages和Cloudflare Pages上。主要内容包括：</p><ul><li>环境准备：安装 Node.js和 Git</li><li>配置Git和GitHub：设置SSH密钥，创建GitHub仓库</li><li>初始化Hexo项目：安装Hexo，创建新博客</li><li>部署到 GitHub Pages：配置部署设置，推送静态文件</li><li>部署到Cloudflare Pages：连接GitHub仓库，自动部署</li><li>基本使用方法：创建新文章，本地预览，发布更新</li></ul><p>这个教程适合那些想要快速搭建个人博客，但又不想花费太多成本的人。通过使用Hexo、 GitHub和Cloudflare的免费服务，您可以轻松创建一个高效、简洁的博客网站。</p><h2 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1.事前准备"></a>1.事前准备</h2><ul><li>域名（非必须，你也可以使用免费域名，或者GitHub.io或Pages.dev分配的域名也可以）</li><li>GitHub（必须，你需要注册一个GitHub帐号）</li><li>Cloudflare（非必须，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用GitHub.io分配的域名）</li></ul><h2 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2.软件支持"></a>2.软件支持</h2><ul><li>Node（必须）</li><li>Git（必须）</li><li>VSCode（非必须，款轻量型的IDE）</li></ul><h3 id="2-1安装node"><a href="#2-1安装node" class="headerlink" title="2.1安装node"></a>2.1安装node</h3><ul><li>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></li><li>下载后安装，安装的目录可以使用默认目录C:&#x2F;Program Files&#x2F;nodejs&#x2F;</li><li>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</li><li>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2安装GIT"><a href="#2-2安装GIT" class="headerlink" title="2.2安装GIT"></a>2.2安装GIT</h3><ul><li>进入官网下载适合你当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录C:&#x2F;Program Files&#x2F;Git</li><li>点击电脑左下角开始即可看见Git Bash（建议使用。</li></ul><h2 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3.配置 Git 密钥并连接至 Github"></a>3.配置 Git 密钥并连接至 Github</h2><p>常用 Git 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><h3 id="3-1-配置用户名和邮箱"><a href="#3-1-配置用户名和邮箱" class="headerlink" title="3.1. 配置用户名和邮箱"></a>3.1. 配置用户名和邮箱</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过git config -l 检查是否配置成功。<br><img src="https://img.51santi.uk/file/be7347836e9e2e2f8271c.jpg" alt="be7347836e9e2e2f8271c.jpg"></p><h3 id="3-2-配置公钥连接Github"><a href="#3-2-配置公钥连接Github" class="headerlink" title="3.2. 配置公钥连接Github"></a>3.2. 配置公钥连接Github</h3><ol><li>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>提示Enter file in which to save the key直接一路回车即可，新手小白不推荐设置密钥<br><img src="https://img.51santi.uk/file/d9481254265c914c89649.jpg" alt="d9481254265c914c89649.jpg"></li></ol><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件</p><ul><li>id_rsa私钥</li><li>id_rsa.pub公钥</li></ul><p><img src="https://img.51santi.uk/file/20b5d0171147ad6d5bc78.jpg" alt="20b5d0171147ad6d5bc78.jpg"><br>用记事本打开上述图片中的公钥id_rsa.pub，复制里面的内容，然后开始在github中配置ssh密钥。<br><img src="https://img.51santi.uk/file/4eedc9e221a44aa536731.jpg" alt="4eedc9e221a44aa536731.jpg"></p><ol start="2"><li>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择settings，进入设置页后选择 SSH and GPG keys，名字随便起，公钥填到Key那一栏。<br><img src="https://img.51santi.uk/file/59e52fba976bf1331b7ba.jpg" alt="59e52fba976bf1331b7ba.jpg"><br><img src="https://img.51santi.uk/file/b85b1a94530631ae2a9fb.jpg" alt="b85b1a94530631ae2a9fb.jpg"><br><img src="https://img.51santi.uk/file/7d317076eb02afa508f33.jpg" alt="7d317076eb02afa508f33.jpg"></li><li>测试连接，输入以下命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>第一次连接会提示Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?，输入yes即可<br><img src="https://img.51santi.uk/file/7ebb59811f7c3e92dedf4.jpg" alt="7ebb59811f7c3e92dedf4.jpg"><br>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi jhonsnow123! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-3-配置公钥连接Github"><a href="#3-3-配置公钥连接Github" class="headerlink" title="3.3. 配置公钥连接Github"></a>3.3. 配置公钥连接Github</h3><ol><li>点击右上角的+按钮，选择New repository，创建一个&lt;用户名&gt;.github.io的仓库。</li><li>仓库名字的格式必须为：&lt;用户名&gt;.github.io (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</li><li>可见性必须选择 Public 方便第一次部署检查问题，点击 Creat repository 进行创建即可<br>  <img src="https://img.51santi.uk/file/109388de5059022cfd5a5.jpg" alt="109388de5059022cfd5a5.jpg"></li></ol><h2 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4.初始化 Hexo 博客"></a>4.初始化 Hexo 博客</h2><ol><li>创建一个文件夹来保存博客源码（我这里选的路径为D:&#x2F;Hexo-Blog），在文件夹内右键鼠标，选择Open Git Bash here<br>  <img src="https://img.51santi.uk/file/e273c710e4b9a7849da67.jpg" alt="e273c710e4b9a7849da67.jpg"></li><li>在Git BASH输入如下命令安装 Hexo  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure>  <img src="https://img.51santi.uk/file/6c2c6db7615e5a8ac9fcc.jpg" alt="6c2c6db7615e5a8ac9fcc.jpg"></li><li>安装完后输入hexo -v验证是否安装成功。<br><img src="https://img.51santi.uk/file/2e0d3a0f71726e651209c.jpg" alt="2e0d3a0f71726e651209c.jpg"></li></ol><p>  4.初始化 Hexo 项目安装相关依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line">cd blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="https://img.51santi.uk/file/fe4a3d5f5c65d5ed466b9.jpg" alt="fe4a3d5f5c65d5ed466b9.jpg"><br> 5. 初始化项目后，blog-demo有如下结构：<br> <img src="https://img.51santi.uk/file/69eccf0a00005d2bacaff.png" alt="69eccf0a00005d2bacaff.png"></p><ul><li>node_modules：依赖包</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>.npmignore：发布时忽略的文件（可忽略）</li><li>_config.landscape.yml：主题的配置文件</li><li>config.yml：博客的配置文件</li><li>package.json：项目名称、描述、版本、运行和开发等信</li></ul><ol start="6"><li><p>输入hexo cl &amp;&amp; hexo s启动项目<br> <img src="https://img.51santi.uk/file/360189db8aa027efce4ad.png" alt="360189db8aa027efce4ad.png"></p></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。<br>  <img src="https://img.51santi.uk/file/dbee2ccb55ce155b988d4.png" alt="dbee2ccb55ce155b988d4.png"></p></li></ol><h2 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h2><ol><li>安装 hexo-deployer-git   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>修改 _config.yml 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为main代表主分支（注意缩进）。 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repository:</span> <span class="string">git@github.com:jhonsnow123/jhonsnow123.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure></li></ol><ul><li>hexo clean：删除之前生成的文件，可以用hexo cl缩写。</li><li>hexo generate：生成静态文章，可以用hexo g缩写</li><li>hexo deploy：部署文章，可以用hexo d缩写<br><img src="https://img.51santi.uk/file/da69c2d2fafa56b39eeeb.png" alt="da69c2d2fafa56b39eeeb.png"><br>注意：deploy时可能要你输入 username 和 password。<br>如果出现Deploy done，则说明部署成功了。<br><img src="https://img.51santi.uk/file/f419ab7e0cdbf6b32ab8a.png" alt="f419ab7e0cdbf6b32ab8a.png"><br>等两分钟，打开浏览器访问：<a href="https://jhonsnow123.github.io/">https://jhonsnow123.github.io</a> ，这时候我们就可以看到博客内容了。</li></ul><h2 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h2><ol><li><p>在 Workers 和 Pages 中选择 Pages 的 连接到 Git<br><img src="https://img.51santi.uk/file/3d24654e2243d1cc773bf.png" alt="3d24654e2243d1cc773bf.png"><br><img src="https://img.51santi.uk/file/ca8e35be8f87cf1863395.png" alt="ca8e35be8f87cf1863395.png"></p></li><li><p>然后登录你Blog仓库对应的GitHub帐号<br><img src="https://img.51santi.uk/file/0ab0525b0c3e0d298533d.png" alt="0ab0525b0c3e0d298533d.png"><br><img src="https://img.51santi.uk/file/d295b4b025a9ad1259a0c.png" alt="d295b4b025a9ad1259a0c.png"></p></li><li><p>点击保存并部署后等待部署完成即可。<br><img src="https://img.51santi.uk/file/68f8d149df486882735d8.png" alt="68f8d149df486882735d8.png"></p></li><li><p>提示成功！您的项目已部署到以下区域：全球后，浏览器访问：<a href="https://jhonsnow123-github-io.pages.dev/">https://jhonsnow123-github-io.pages.dev</a> ，这时候我们就可以看到博客内容了。<br><img src="https://img.51santi.uk/file/f999ae4939ad77dcc39a7.png" alt="f999ae4939ad77dcc39a7.png"><br>这时你也就可以将你的&lt;用户名&gt;.github.io的仓库设置为Private私库了</p></li><li><p>如果你有自己的域名，你可以在这里绑定你自己的自定义域，即可<br><img src="https://img.51santi.uk/file/75e79412cf72404a90f58.png" alt="75e79412cf72404a90f58.png"><br><img src="https://img.51santi.uk/file/3f28706ab930b9d2dc6c7.png" alt="3f28706ab930b9d2dc6c7.png"></p></li></ol><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><h2 id="1-新建一篇博文"><a href="#1-新建一篇博文" class="headerlink" title="1.新建一篇博文"></a>1.新建一篇博文</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;新博文&quot;</span><br></pre></td></tr></table></figure><p>然后用文本编辑器去编辑_posts&#x2F;新博文文.md里的内容即可，注意要使用Markdown格式书写。<br>详细使用方法可以查阅 <a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h2 id="2-编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览"><a href="#2-编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览" class="headerlink" title="2.编辑完文章保存后可以使用如下命令，生成本地页面 http://localhost:4000/ ，进行预览"></a>2.编辑完文章保存后可以使用如下命令，生成本地页面 <a href="http://localhost:4000/">http://localhost:4000/</a> ，进行预览</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo s</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><h2 id="3-确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"><a href="#3-确认无误后使用以下命令，将本地文章推送至GitHub仓库即可" class="headerlink" title="3.确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"></a>3.确认无误后使用以下命令，将本地文章推送至GitHub仓库即可</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo doc</title>
      <link href="/2024/07/18/Hexo-doc/"/>
      <url>/2024/07/18/Hexo-doc/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基本资源分享</title>
      <link href="/2024/07/06/%E5%9F%BA%E6%9C%AC%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
      <url>/2024/07/06/%E5%9F%BA%E6%9C%AC%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="记录生活的点点滴滴"><a href="#记录生活的点点滴滴" class="headerlink" title="记录生活的点点滴滴"></a>记录生活的点点滴滴</h1><h3 id="用大自然的语言书写人生信条"><a href="#用大自然的语言书写人生信条" class="headerlink" title="用大自然的语言书写人生信条"></a>用大自然的语言书写人生信条</h3><p>More info: <a href="https://blog.090227.xyz/p/HexoBlogNo1/">Writing</a></p><p><img src="https://img1.131213.xyz/file/c81ff84e86e7deda73c89.jpg" alt="c81ff84e86e7deda73c89.jpg"></p><h1 id="推荐素材网址"><a href="#推荐素材网址" class="headerlink" title="推荐素材网址"></a>推荐素材网址</h1><ul><li><p>无版权可商用的图片网站1：<a href="https://pixabay.com/">https://pixabay.com/</a></p></li><li><p>无版权可商用的图片网站2：<a href="https://www.pexels.com/">https://www.pexels.com/</a></p></li><li><p>无版权可商用的图片网站3：<a href="https://unsplash.com/">https://unsplash.com/</a></p></li><li><p>阿里图标库：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></p></li><li><p>fontawesome图标库：<a href="https://fontawesome.com/">https://fontawesome.com/</a></p></li><li><p>水印去除：<a href="https://huggingface.co/spaces/Sanster/Lama-Cleaner-lama">https://huggingface.co/spaces/Sanster/Lama-Cleaner-lama</a></p></li></ul><h1 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h1><ul><li>安知鱼文档：<a href="https://docs.anheyu.com/">https://docs.anheyu.com/</a></li></ul><h1 id="技术工具地址"><a href="#技术工具地址" class="headerlink" title="技术工具地址"></a>技术工具地址</h1><ul><li>IDEA&#x2F;常用工具网站：<a href="https://33tool.com/idea/">https://33tool.com/idea/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
